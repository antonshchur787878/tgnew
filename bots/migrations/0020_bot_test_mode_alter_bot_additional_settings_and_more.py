# Generated by Django 5.2 on 2025-05-25 11:57

import bots.models
import django.core.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('bots', '0019_botposition_highest_price_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='bot',
            name='test_mode',
            field=models.BooleanField(default=False, help_text='Запуск бота в режиме симуляции (без реальных сделок)', verbose_name='Тестовый режим'),
        ),
        migrations.AlterField(
            model_name='bot',
            name='additional_settings',
            field=models.JSONField(default=dict, help_text='Дополнительные параметры бота', validators=[bots.models.validate_additional_settings], verbose_name='Дополнительные настройки'),
        ),
        migrations.AlterField(
            model_name='bot',
            name='leverage',
            field=models.IntegerField(default=1, help_text='Кредитное плечо, используемое ботом', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(125)], verbose_name='Кредитное плечо'),
        ),
        migrations.AlterField(
            model_name='bot',
            name='margin_type',
            field=models.CharField(choices=[('isolated', 'Isolated'), ('cross', 'Cross')], default='isolated', max_length=20, verbose_name='Тип маржи'),
        ),
        migrations.AlterField(
            model_name='bot',
            name='strategy',
            field=models.CharField(choices=[('spot', 'Spot Trading'), ('futures', 'Futures Trading'), ('margin', 'Margin Trading')], max_length=50, verbose_name='Стратегия'),
        ),
        migrations.AlterField(
            model_name='bot',
            name='trade_mode',
            field=models.CharField(choices=[('order_grid', 'Order Grid'), ('martingale', 'Martingale'), ('custom', 'Custom'), ('dca', 'Dollar-Cost Averaging'), ('trailing_stop', 'Trailing Stop'), ('arbitrage', 'Arbitrage')], default='order_grid', help_text='Например, order_grid или martingale', max_length=50, verbose_name='Режим торговли'),
        ),
        migrations.AlterField(
            model_name='botsettings',
            name='combined_signals',
            field=models.JSONField(blank=True, default=list, help_text="Список сигналов, например: [{'type': 'rsi', 'threshold': 30}, {'type': 'macd', 'condition': 'crossover'}]", verbose_name='Комбинация сигналов'),
        ),
        migrations.AlterField(
            model_name='botsettings',
            name='combined_strategies',
            field=models.JSONField(blank=True, default=list, help_text="Список стратегий, например: ['order_grid', 'trailing_stop']", verbose_name='Комбинация стратегий'),
        ),
        migrations.AlterField(
            model_name='botsettings',
            name='dca_interval',
            field=models.IntegerField(blank=True, default=60, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Интервал DCA (минуты)'),
        ),
        migrations.AlterField(
            model_name='botsettings',
            name='grid_orders',
            field=models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Количество ордеров в сетке'),
        ),
        migrations.AlterField(
            model_name='botsettings',
            name='grid_overlap',
            field=models.FloatField(default=25.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Перекрытие сетки (%)'),
        ),
        migrations.AlterField(
            model_name='botsettings',
            name='grid_spacing',
            field=models.FloatField(default=1.0, validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(100)], verbose_name='Отступ между ордерами (%)'),
        ),
        migrations.AlterField(
            model_name='botsettings',
            name='martingale',
            field=models.FloatField(default=5.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Коэффициент мартингейла (%)'),
        ),
        migrations.AlterField(
            model_name='botsettings',
            name='signal_interval',
            field=models.CharField(default='60', help_text="Например, '1h' для часового интервала", max_length=20, verbose_name='Интервал сигнала'),
        ),
        migrations.AlterField(
            model_name='botsettings',
            name='signal_type',
            field=models.CharField(choices=[('price', 'Цена'), ('base_volume', 'Объём базовой'), ('nominal_volume', 'Объём номинальной'), ('rsi', 'RSI'), ('cci', 'CCI'), ('mfi', 'MFI'), ('macd', 'MACD'), ('bollinger_bands', 'Bollinger Bands'), ('stochastic', 'Stochastic'), ('volume_spike', 'Volume Spike'), ('ma_crossover', 'Moving Average Crossover'), ('pivot_points', 'Pivot Points')], default='price', max_length=20, verbose_name='Тип сигнала'),
        ),
        migrations.AlterField(
            model_name='botsettings',
            name='stop_loss',
            field=models.FloatField(blank=True, default=5.0, null=True, validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(100)], verbose_name='Стоп-лосс (%)'),
        ),
        migrations.AlterField(
            model_name='botsettings',
            name='take_profit',
            field=models.FloatField(default=5.0, validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(100)], verbose_name='Тейк-профит (%)'),
        ),
        migrations.AlterField(
            model_name='botsettings',
            name='trailing_stop_percentage',
            field=models.FloatField(blank=True, default=1.0, null=True, validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(100)], verbose_name='Процент Trailing Stop (%)'),
        ),
        migrations.AddIndex(
            model_name='logentry',
            index=models.Index(fields=['status'], name='bots_logent_status_fb5b77_idx'),
        ),
    ]
